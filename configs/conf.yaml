data: data.parq
dpath: 'data/'
dbins: 'data_woe_bins.dat'
ppath: 'plot_bins/'
dvarsel: 'data_varsel.parq'
target: 'target'
bads: 
  [
    'price_open', 
    'price_close', 
    'sign_spread_target',
    'spread_target',
    'target'
  ]
price_open: 'price_open'
price_close: 'price_close'
begin_training: 2018-05-08 00:00
end_training: 2020-03-31 23:00
begin_valid: 2020-04-01 00:00
end_valid: 2020-06-30 23:00
begin_test: 2020-07-01 00:00
end_test: 2020-09-30 08:00

models:
  sklearn.tree.DecisionTreeClassifier:
    criterion: ['gini']
    max_depth: [2,6,6,8,10]
  sklearn.ensemble.RandomForestClassifier:
    n_estimators: [500]  # [250,500,750,1000] 
    max_depth: [2,6,6,8,10]
  sklearn.linear_model.LogisticRegression:
    solver: ['saga']
    penalty: ['l1', 'l2', 'elasticnet']
    l1_ratio: [0,0.5,1]
  sklearn.neural_network.MLPClassifier:
    activation: ['logistic'] #['identity','logistic','tanh','relu']
    solver: ['adam'] #['sgd','adam']
    alpha: [0.0001] # [0.01, 0.0001]
    learning_rate: ['constant'] #['constant', 'invscaling', 'adaptive']
    max_iter: [1000]
    hidden_layer_sizes:  
        [ 
          !!python/tuple [90,10], 
          !!python/tuple [80,20], 
          !!python/tuple [70,30], 
          !!python/tuple [60,40], 
          !!python/tuple [50,50]
        ]
  sklearn.svm.SVC:
    C: [0.5,1]
    kernel: ['linear', 'poly', 'rbf', 'sigmoid']
    gamma: ['scale', 'auto']
    max_iter: [1000]